CREATE PROCEDURE OrderDetails  ( @WorkOrderID int )      
AS      
SET NOCOUNT ON;      
BEGIN TRY      
   BEGIN TRANSACTION       
   DELETE FROM OrderDetails      
   WHERE OrderId = @OrderID;      
      
   -- Delete the rows from the parent table, orderdetails, for the specified OrderDetails.      
   DELETE FROM OrderDetails      
   WHERE OrderId  = @OrderID;      
      
   COMMIT      
      
END TRY      
BEGIN CATCH      
  -- Determine if an error occurred.      
  IF @@TRANCOUNT > 0      
     ROLLBACK      
      
  -- Return the error information.      
  DECLARE @ErrorMessage nvarchar(4000),  @ErrorSeverity int;      
  SELECT @ErrorMessage = ERROR_MESSAGE(),@ErrorSeverity = ERROR_SEVERITY();      
  RAISERROR(@ErrorMessage, @ErrorSeverity, 1);      
END CATCH;      
      
GO      
EXEC OrderDetails  13;      
      
/* Intentionally generate an error by reversing the order in which rows     
   are deleted from the parent and child tables. This change does not     
   cause an error when the procedure definition is altered, but produces     
   an error when the procedure is executed.      
*/      
ALTER PROCEDURE OrderDetails  ( @OrderID int )      
AS      
      
BEGIN TRY      
   BEGIN TRANSACTION       
      -- Delete the rows from the parent table, OrderDetails, for the specified work order.      
   DELETE FROM  OrderDetails      
   WHERE OrderId  = @OrderID;      
      
   -- Delete rows from the child table, OrderDetails, for the specified work order.      
   DELETE FROM OrderDetails      
   WHERE OrderId  = @OrderID;      
      
   COMMIT TRANSACTION      
      
END TRY      
BEGIN CATCH      
  -- Determine if an error occurred.      
  IF @@TRANCOUNT > 0      
     ROLLBACK TRANSACTION      
      
  -- Return the error information.      
  DECLARE @ErrorMessage nvarchar(4000),  @ErrorSeverity int;      
  SELECT @ErrorMessage = ERROR_MESSAGE(),@ErrorSeverity = ERROR_SEVERITY();      
  RAISERROR(@ErrorMessage, @ErrorSeverity, 1);      
END CATCH;      
GO      
-- Execute the altered procedure.      
EXEC OrderDetails  15;      
      
DROP PROCEDURE OrderDetails    
